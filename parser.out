Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> assignment_statement
Rule 5     statement -> expression_statement
Rule 6     statement -> print_statement
Rule 7     statement -> if_statement
Rule 8     statement -> while_statement
Rule 9     statement -> repeat_statement
Rule 10    statement -> function_declaration
Rule 11    statement -> return_statement
Rule 12    statement -> input_statement
Rule 13    assignment_statement -> IDENTIFIER IS expression SEMICOLON
Rule 14    assignment_expression -> IDENTIFIER ASSIGN expression
Rule 15    expression_statement -> expression SEMICOLON
Rule 16    print_statement -> SAY LPAREN expression RPAREN SEMICOLON
Rule 17    input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
Rule 18    input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
Rule 19    if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 20    if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
Rule 21    while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 22    function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 23    return_statement -> GIVE expression SEMICOLON
Rule 24    repeat_statement -> REPEAT expression LBRACE statement_list RBRACE
Rule 25    parameter_list -> parameter_list COMMA IDENTIFIER
Rule 26    parameter_list -> IDENTIFIER
Rule 27    parameter_list -> empty
Rule 28    argument_list -> argument_list COMMA expression
Rule 29    argument_list -> expression
Rule 30    argument_list -> empty
Rule 31    expression -> IDENTIFIER LPAREN argument_list RPAREN
Rule 32    expression -> expression PLUS expression
Rule 33    expression -> expression MINUS expression
Rule 34    expression -> expression TIMES expression
Rule 35    expression -> expression DIVIDE expression
Rule 36    expression -> expression EQ expression
Rule 37    expression -> expression NEQ expression
Rule 38    expression -> expression LT expression
Rule 39    expression -> expression GT expression
Rule 40    expression -> expression LEQ expression
Rule 41    expression -> expression GEQ expression
Rule 42    expression -> expression AND expression
Rule 43    expression -> expression OR expression
Rule 44    expression -> NOT expression
Rule 45    expression -> LPAREN expression RPAREN
Rule 46    expression -> NUMBER
Rule 47    expression -> FLOAT
Rule 48    expression -> STRING
Rule 49    expression -> IDENTIFIER
Rule 50    empty -> <empty>

Terminals, with rules where they appear

AND                  : 42
ASK                  : 17 18
ASSIGN               : 14
CHECK                : 19 20
COMMA                : 25 28
CREATE               : 22
DIVIDE               : 35
EQ                   : 36
FLOAT                : 47
GEQ                  : 41
GIVE                 : 23
GT                   : 39
IDENTIFIER           : 13 14 17 18 22 25 26 31 49
IS                   : 13 17 18
KEEP                 : 21
LBRACE               : 19 20 20 21 22 24
LEQ                  : 40
LPAREN               : 16 17 18 19 20 21 22 31 45
LT                   : 38
MINUS                : 33
NEQ                  : 37
NOT                  : 44
NUMBER               : 46
OR                   : 43
OTHERWISE            : 20
PLUS                 : 32
RBRACE               : 19 20 20 21 22 24
REPEAT               : 24
RPAREN               : 16 17 18 19 20 21 22 31 45
SAY                  : 16
SEMICOLON            : 13 15 16 17 18 23
STRING               : 48
TIMES                : 34
error                : 

Nonterminals, with rules where they appear

argument_list        : 28 31
assignment_expression : 
assignment_statement : 4
empty                : 27 30
expression           : 13 14 15 16 18 19 20 21 23 24 28 29 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 45
expression_statement : 5
function_declaration : 10
if_statement         : 7
input_statement      : 12
parameter_list       : 22 25
print_statement      : 6
program              : 0
repeat_statement     : 9
return_statement     : 11
statement            : 2 3
statement_list       : 1 2 19 20 20 21 22 24
while_statement      : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12
    expression                     shift and go to state 14

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    $end            reduce using rule 1 (program -> statement_list .)
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12
    expression                     shift and go to state 14

state 3

    (3) statement_list -> statement .

    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    SAY             reduce using rule 3 (statement_list -> statement .)
    CHECK           reduce using rule 3 (statement_list -> statement .)
    KEEP            reduce using rule 3 (statement_list -> statement .)
    REPEAT          reduce using rule 3 (statement_list -> statement .)
    CREATE          reduce using rule 3 (statement_list -> statement .)
    GIVE            reduce using rule 3 (statement_list -> statement .)
    NOT             reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> assignment_statement .

    IDENTIFIER      reduce using rule 4 (statement -> assignment_statement .)
    SAY             reduce using rule 4 (statement -> assignment_statement .)
    CHECK           reduce using rule 4 (statement -> assignment_statement .)
    KEEP            reduce using rule 4 (statement -> assignment_statement .)
    REPEAT          reduce using rule 4 (statement -> assignment_statement .)
    CREATE          reduce using rule 4 (statement -> assignment_statement .)
    GIVE            reduce using rule 4 (statement -> assignment_statement .)
    NOT             reduce using rule 4 (statement -> assignment_statement .)
    LPAREN          reduce using rule 4 (statement -> assignment_statement .)
    NUMBER          reduce using rule 4 (statement -> assignment_statement .)
    FLOAT           reduce using rule 4 (statement -> assignment_statement .)
    STRING          reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)
    RBRACE          reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) statement -> expression_statement .

    IDENTIFIER      reduce using rule 5 (statement -> expression_statement .)
    SAY             reduce using rule 5 (statement -> expression_statement .)
    CHECK           reduce using rule 5 (statement -> expression_statement .)
    KEEP            reduce using rule 5 (statement -> expression_statement .)
    REPEAT          reduce using rule 5 (statement -> expression_statement .)
    CREATE          reduce using rule 5 (statement -> expression_statement .)
    GIVE            reduce using rule 5 (statement -> expression_statement .)
    NOT             reduce using rule 5 (statement -> expression_statement .)
    LPAREN          reduce using rule 5 (statement -> expression_statement .)
    NUMBER          reduce using rule 5 (statement -> expression_statement .)
    FLOAT           reduce using rule 5 (statement -> expression_statement .)
    STRING          reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)
    RBRACE          reduce using rule 5 (statement -> expression_statement .)


state 6

    (6) statement -> print_statement .

    IDENTIFIER      reduce using rule 6 (statement -> print_statement .)
    SAY             reduce using rule 6 (statement -> print_statement .)
    CHECK           reduce using rule 6 (statement -> print_statement .)
    KEEP            reduce using rule 6 (statement -> print_statement .)
    REPEAT          reduce using rule 6 (statement -> print_statement .)
    CREATE          reduce using rule 6 (statement -> print_statement .)
    GIVE            reduce using rule 6 (statement -> print_statement .)
    NOT             reduce using rule 6 (statement -> print_statement .)
    LPAREN          reduce using rule 6 (statement -> print_statement .)
    NUMBER          reduce using rule 6 (statement -> print_statement .)
    FLOAT           reduce using rule 6 (statement -> print_statement .)
    STRING          reduce using rule 6 (statement -> print_statement .)
    $end            reduce using rule 6 (statement -> print_statement .)
    RBRACE          reduce using rule 6 (statement -> print_statement .)


state 7

    (7) statement -> if_statement .

    IDENTIFIER      reduce using rule 7 (statement -> if_statement .)
    SAY             reduce using rule 7 (statement -> if_statement .)
    CHECK           reduce using rule 7 (statement -> if_statement .)
    KEEP            reduce using rule 7 (statement -> if_statement .)
    REPEAT          reduce using rule 7 (statement -> if_statement .)
    CREATE          reduce using rule 7 (statement -> if_statement .)
    GIVE            reduce using rule 7 (statement -> if_statement .)
    NOT             reduce using rule 7 (statement -> if_statement .)
    LPAREN          reduce using rule 7 (statement -> if_statement .)
    NUMBER          reduce using rule 7 (statement -> if_statement .)
    FLOAT           reduce using rule 7 (statement -> if_statement .)
    STRING          reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    RBRACE          reduce using rule 7 (statement -> if_statement .)


state 8

    (8) statement -> while_statement .

    IDENTIFIER      reduce using rule 8 (statement -> while_statement .)
    SAY             reduce using rule 8 (statement -> while_statement .)
    CHECK           reduce using rule 8 (statement -> while_statement .)
    KEEP            reduce using rule 8 (statement -> while_statement .)
    REPEAT          reduce using rule 8 (statement -> while_statement .)
    CREATE          reduce using rule 8 (statement -> while_statement .)
    GIVE            reduce using rule 8 (statement -> while_statement .)
    NOT             reduce using rule 8 (statement -> while_statement .)
    LPAREN          reduce using rule 8 (statement -> while_statement .)
    NUMBER          reduce using rule 8 (statement -> while_statement .)
    FLOAT           reduce using rule 8 (statement -> while_statement .)
    STRING          reduce using rule 8 (statement -> while_statement .)
    $end            reduce using rule 8 (statement -> while_statement .)
    RBRACE          reduce using rule 8 (statement -> while_statement .)


state 9

    (9) statement -> repeat_statement .

    IDENTIFIER      reduce using rule 9 (statement -> repeat_statement .)
    SAY             reduce using rule 9 (statement -> repeat_statement .)
    CHECK           reduce using rule 9 (statement -> repeat_statement .)
    KEEP            reduce using rule 9 (statement -> repeat_statement .)
    REPEAT          reduce using rule 9 (statement -> repeat_statement .)
    CREATE          reduce using rule 9 (statement -> repeat_statement .)
    GIVE            reduce using rule 9 (statement -> repeat_statement .)
    NOT             reduce using rule 9 (statement -> repeat_statement .)
    LPAREN          reduce using rule 9 (statement -> repeat_statement .)
    NUMBER          reduce using rule 9 (statement -> repeat_statement .)
    FLOAT           reduce using rule 9 (statement -> repeat_statement .)
    STRING          reduce using rule 9 (statement -> repeat_statement .)
    $end            reduce using rule 9 (statement -> repeat_statement .)
    RBRACE          reduce using rule 9 (statement -> repeat_statement .)


state 10

    (10) statement -> function_declaration .

    IDENTIFIER      reduce using rule 10 (statement -> function_declaration .)
    SAY             reduce using rule 10 (statement -> function_declaration .)
    CHECK           reduce using rule 10 (statement -> function_declaration .)
    KEEP            reduce using rule 10 (statement -> function_declaration .)
    REPEAT          reduce using rule 10 (statement -> function_declaration .)
    CREATE          reduce using rule 10 (statement -> function_declaration .)
    GIVE            reduce using rule 10 (statement -> function_declaration .)
    NOT             reduce using rule 10 (statement -> function_declaration .)
    LPAREN          reduce using rule 10 (statement -> function_declaration .)
    NUMBER          reduce using rule 10 (statement -> function_declaration .)
    FLOAT           reduce using rule 10 (statement -> function_declaration .)
    STRING          reduce using rule 10 (statement -> function_declaration .)
    $end            reduce using rule 10 (statement -> function_declaration .)
    RBRACE          reduce using rule 10 (statement -> function_declaration .)


state 11

    (11) statement -> return_statement .

    IDENTIFIER      reduce using rule 11 (statement -> return_statement .)
    SAY             reduce using rule 11 (statement -> return_statement .)
    CHECK           reduce using rule 11 (statement -> return_statement .)
    KEEP            reduce using rule 11 (statement -> return_statement .)
    REPEAT          reduce using rule 11 (statement -> return_statement .)
    CREATE          reduce using rule 11 (statement -> return_statement .)
    GIVE            reduce using rule 11 (statement -> return_statement .)
    NOT             reduce using rule 11 (statement -> return_statement .)
    LPAREN          reduce using rule 11 (statement -> return_statement .)
    NUMBER          reduce using rule 11 (statement -> return_statement .)
    FLOAT           reduce using rule 11 (statement -> return_statement .)
    STRING          reduce using rule 11 (statement -> return_statement .)
    $end            reduce using rule 11 (statement -> return_statement .)
    RBRACE          reduce using rule 11 (statement -> return_statement .)


state 12

    (12) statement -> input_statement .

    IDENTIFIER      reduce using rule 12 (statement -> input_statement .)
    SAY             reduce using rule 12 (statement -> input_statement .)
    CHECK           reduce using rule 12 (statement -> input_statement .)
    KEEP            reduce using rule 12 (statement -> input_statement .)
    REPEAT          reduce using rule 12 (statement -> input_statement .)
    CREATE          reduce using rule 12 (statement -> input_statement .)
    GIVE            reduce using rule 12 (statement -> input_statement .)
    NOT             reduce using rule 12 (statement -> input_statement .)
    LPAREN          reduce using rule 12 (statement -> input_statement .)
    NUMBER          reduce using rule 12 (statement -> input_statement .)
    FLOAT           reduce using rule 12 (statement -> input_statement .)
    STRING          reduce using rule 12 (statement -> input_statement .)
    $end            reduce using rule 12 (statement -> input_statement .)
    RBRACE          reduce using rule 12 (statement -> input_statement .)


state 13

    (13) assignment_statement -> IDENTIFIER . IS expression SEMICOLON
    (17) input_statement -> IDENTIFIER . IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> IDENTIFIER . IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> IDENTIFIER . LPAREN argument_list RPAREN
    (49) expression -> IDENTIFIER .

    IS              shift and go to state 27
    LPAREN          shift and go to state 28
    SEMICOLON       reduce using rule 49 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 49 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 49 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 49 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 49 (expression -> IDENTIFIER .)
    EQ              reduce using rule 49 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    LT              reduce using rule 49 (expression -> IDENTIFIER .)
    GT              reduce using rule 49 (expression -> IDENTIFIER .)
    LEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    GEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    AND             reduce using rule 49 (expression -> IDENTIFIER .)
    OR              reduce using rule 49 (expression -> IDENTIFIER .)


state 14

    (15) expression_statement -> expression . SEMICOLON
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 15

    (16) print_statement -> SAY . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 42


state 16

    (45) expression -> LPAREN . expression RPAREN
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 43

state 17

    (19) if_statement -> CHECK . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> CHECK . LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE

    LPAREN          shift and go to state 45


state 18

    (21) while_statement -> KEEP . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 46


state 19

    (24) repeat_statement -> REPEAT . expression LBRACE statement_list RBRACE
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 47

state 20

    (22) function_declaration -> CREATE . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 48


state 21

    (23) return_statement -> GIVE . expression SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 49

state 22

    (44) expression -> NOT . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 50

state 23

    (46) expression -> NUMBER .

    SEMICOLON       reduce using rule 46 (expression -> NUMBER .)
    PLUS            reduce using rule 46 (expression -> NUMBER .)
    MINUS           reduce using rule 46 (expression -> NUMBER .)
    TIMES           reduce using rule 46 (expression -> NUMBER .)
    DIVIDE          reduce using rule 46 (expression -> NUMBER .)
    EQ              reduce using rule 46 (expression -> NUMBER .)
    NEQ             reduce using rule 46 (expression -> NUMBER .)
    LT              reduce using rule 46 (expression -> NUMBER .)
    GT              reduce using rule 46 (expression -> NUMBER .)
    LEQ             reduce using rule 46 (expression -> NUMBER .)
    GEQ             reduce using rule 46 (expression -> NUMBER .)
    AND             reduce using rule 46 (expression -> NUMBER .)
    OR              reduce using rule 46 (expression -> NUMBER .)
    RPAREN          reduce using rule 46 (expression -> NUMBER .)
    LBRACE          reduce using rule 46 (expression -> NUMBER .)
    COMMA           reduce using rule 46 (expression -> NUMBER .)


state 24

    (47) expression -> FLOAT .

    SEMICOLON       reduce using rule 47 (expression -> FLOAT .)
    PLUS            reduce using rule 47 (expression -> FLOAT .)
    MINUS           reduce using rule 47 (expression -> FLOAT .)
    TIMES           reduce using rule 47 (expression -> FLOAT .)
    DIVIDE          reduce using rule 47 (expression -> FLOAT .)
    EQ              reduce using rule 47 (expression -> FLOAT .)
    NEQ             reduce using rule 47 (expression -> FLOAT .)
    LT              reduce using rule 47 (expression -> FLOAT .)
    GT              reduce using rule 47 (expression -> FLOAT .)
    LEQ             reduce using rule 47 (expression -> FLOAT .)
    GEQ             reduce using rule 47 (expression -> FLOAT .)
    AND             reduce using rule 47 (expression -> FLOAT .)
    OR              reduce using rule 47 (expression -> FLOAT .)
    RPAREN          reduce using rule 47 (expression -> FLOAT .)
    LBRACE          reduce using rule 47 (expression -> FLOAT .)
    COMMA           reduce using rule 47 (expression -> FLOAT .)


state 25

    (48) expression -> STRING .

    SEMICOLON       reduce using rule 48 (expression -> STRING .)
    PLUS            reduce using rule 48 (expression -> STRING .)
    MINUS           reduce using rule 48 (expression -> STRING .)
    TIMES           reduce using rule 48 (expression -> STRING .)
    DIVIDE          reduce using rule 48 (expression -> STRING .)
    EQ              reduce using rule 48 (expression -> STRING .)
    NEQ             reduce using rule 48 (expression -> STRING .)
    LT              reduce using rule 48 (expression -> STRING .)
    GT              reduce using rule 48 (expression -> STRING .)
    LEQ             reduce using rule 48 (expression -> STRING .)
    GEQ             reduce using rule 48 (expression -> STRING .)
    AND             reduce using rule 48 (expression -> STRING .)
    OR              reduce using rule 48 (expression -> STRING .)
    RPAREN          reduce using rule 48 (expression -> STRING .)
    LBRACE          reduce using rule 48 (expression -> STRING .)
    COMMA           reduce using rule 48 (expression -> STRING .)


state 26

    (2) statement_list -> statement_list statement .

    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    SAY             reduce using rule 2 (statement_list -> statement_list statement .)
    CHECK           reduce using rule 2 (statement_list -> statement_list statement .)
    KEEP            reduce using rule 2 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 2 (statement_list -> statement_list statement .)
    CREATE          reduce using rule 2 (statement_list -> statement_list statement .)
    GIVE            reduce using rule 2 (statement_list -> statement_list statement .)
    NOT             reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 27

    (13) assignment_statement -> IDENTIFIER IS . expression SEMICOLON
    (17) input_statement -> IDENTIFIER IS . ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> IDENTIFIER IS . ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    ASK             shift and go to state 52
    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 51

state 28

    (31) expression -> IDENTIFIER LPAREN . argument_list RPAREN
    (28) argument_list -> . argument_list COMMA expression
    (29) argument_list -> . expression
    (30) argument_list -> . empty
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER
    (50) empty -> .

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    RPAREN          reduce using rule 50 (empty -> .)
    COMMA           reduce using rule 50 (empty -> .)

    argument_list                  shift and go to state 53
    expression                     shift and go to state 54
    empty                          shift and go to state 55

state 29

    (15) expression_statement -> expression SEMICOLON .

    IDENTIFIER      reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    SAY             reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    CHECK           reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    KEEP            reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    REPEAT          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    CREATE          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    GIVE            reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    NOT             reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 15 (expression_statement -> expression SEMICOLON .)


state 30

    (32) expression -> expression PLUS . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 56

state 31

    (33) expression -> expression MINUS . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 57

state 32

    (34) expression -> expression TIMES . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 58

state 33

    (35) expression -> expression DIVIDE . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 59

state 34

    (36) expression -> expression EQ . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 60

state 35

    (37) expression -> expression NEQ . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 61

state 36

    (38) expression -> expression LT . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 62

state 37

    (39) expression -> expression GT . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 63

state 38

    (40) expression -> expression LEQ . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 64

state 39

    (41) expression -> expression GEQ . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 65

state 40

    (42) expression -> expression AND . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 66

state 41

    (43) expression -> expression OR . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 67

state 42

    (16) print_statement -> SAY LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 68

state 43

    (45) expression -> LPAREN expression . RPAREN
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 44

    (31) expression -> IDENTIFIER . LPAREN argument_list RPAREN
    (49) expression -> IDENTIFIER .

    LPAREN          shift and go to state 28
    RPAREN          reduce using rule 49 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 49 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 49 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 49 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 49 (expression -> IDENTIFIER .)
    EQ              reduce using rule 49 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    LT              reduce using rule 49 (expression -> IDENTIFIER .)
    GT              reduce using rule 49 (expression -> IDENTIFIER .)
    LEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    GEQ             reduce using rule 49 (expression -> IDENTIFIER .)
    AND             reduce using rule 49 (expression -> IDENTIFIER .)
    OR              reduce using rule 49 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 49 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 49 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 49 (expression -> IDENTIFIER .)


state 45

    (19) if_statement -> CHECK LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> CHECK LPAREN . expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 70

state 46

    (21) while_statement -> KEEP LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 71

state 47

    (24) repeat_statement -> REPEAT expression . LBRACE statement_list RBRACE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    LBRACE          shift and go to state 72
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 48

    (22) function_declaration -> CREATE IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 73


state 49

    (23) return_statement -> GIVE expression . SEMICOLON
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       shift and go to state 74
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 50

    (44) expression -> NOT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 44 (expression -> NOT expression .)
    EQ              reduce using rule 44 (expression -> NOT expression .)
    NEQ             reduce using rule 44 (expression -> NOT expression .)
    LT              reduce using rule 44 (expression -> NOT expression .)
    GT              reduce using rule 44 (expression -> NOT expression .)
    LEQ             reduce using rule 44 (expression -> NOT expression .)
    GEQ             reduce using rule 44 (expression -> NOT expression .)
    AND             reduce using rule 44 (expression -> NOT expression .)
    OR              reduce using rule 44 (expression -> NOT expression .)
    RPAREN          reduce using rule 44 (expression -> NOT expression .)
    LBRACE          reduce using rule 44 (expression -> NOT expression .)
    COMMA           reduce using rule 44 (expression -> NOT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! PLUS            [ reduce using rule 44 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> NOT expression .) ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 51

    (13) assignment_statement -> IDENTIFIER IS expression . SEMICOLON
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 52

    (17) input_statement -> IDENTIFIER IS ASK . LPAREN RPAREN SEMICOLON
    (18) input_statement -> IDENTIFIER IS ASK . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 53

    (31) expression -> IDENTIFIER LPAREN argument_list . RPAREN
    (28) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 77
    COMMA           shift and go to state 78


state 54

    (29) argument_list -> expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          reduce using rule 29 (argument_list -> expression .)
    COMMA           reduce using rule 29 (argument_list -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 55

    (30) argument_list -> empty .

    RPAREN          reduce using rule 30 (argument_list -> empty .)
    COMMA           reduce using rule 30 (argument_list -> empty .)


state 56

    (32) expression -> expression PLUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 32 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 32 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 32 (expression -> expression PLUS expression .)
    EQ              reduce using rule 32 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 32 (expression -> expression PLUS expression .)
    LT              reduce using rule 32 (expression -> expression PLUS expression .)
    GT              reduce using rule 32 (expression -> expression PLUS expression .)
    LEQ             reduce using rule 32 (expression -> expression PLUS expression .)
    GEQ             reduce using rule 32 (expression -> expression PLUS expression .)
    AND             reduce using rule 32 (expression -> expression PLUS expression .)
    OR              reduce using rule 32 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 32 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 32 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! TIMES           [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 57

    (33) expression -> expression MINUS expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 33 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 33 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 33 (expression -> expression MINUS expression .)
    EQ              reduce using rule 33 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 33 (expression -> expression MINUS expression .)
    LT              reduce using rule 33 (expression -> expression MINUS expression .)
    GT              reduce using rule 33 (expression -> expression MINUS expression .)
    LEQ             reduce using rule 33 (expression -> expression MINUS expression .)
    GEQ             reduce using rule 33 (expression -> expression MINUS expression .)
    AND             reduce using rule 33 (expression -> expression MINUS expression .)
    OR              reduce using rule 33 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 33 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 33 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! TIMES           [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 58

    (34) expression -> expression TIMES expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 34 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 34 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 34 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 34 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 34 (expression -> expression TIMES expression .)
    EQ              reduce using rule 34 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 34 (expression -> expression TIMES expression .)
    LT              reduce using rule 34 (expression -> expression TIMES expression .)
    GT              reduce using rule 34 (expression -> expression TIMES expression .)
    LEQ             reduce using rule 34 (expression -> expression TIMES expression .)
    GEQ             reduce using rule 34 (expression -> expression TIMES expression .)
    AND             reduce using rule 34 (expression -> expression TIMES expression .)
    OR              reduce using rule 34 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 34 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 34 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 34 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 59

    (35) expression -> expression DIVIDE expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 35 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 35 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 35 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 35 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 35 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 35 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 35 (expression -> expression DIVIDE expression .)
    LEQ             reduce using rule 35 (expression -> expression DIVIDE expression .)
    GEQ             reduce using rule 35 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 35 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 35 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 35 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 35 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 35 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 60

    (36) expression -> expression EQ expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 36 (expression -> expression EQ expression .)
    COMMA           reduce using rule 36 (expression -> expression EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression EQ expression .) ]


state 61

    (37) expression -> expression NEQ expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 37 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 37 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 37 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression NEQ expression .) ]


state 62

    (38) expression -> expression LT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 38 (expression -> expression LT expression .)
    RPAREN          reduce using rule 38 (expression -> expression LT expression .)
    LBRACE          reduce using rule 38 (expression -> expression LT expression .)
    COMMA           reduce using rule 38 (expression -> expression LT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! LEQ             [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! GEQ             [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression LT expression .) ]


state 63

    (39) expression -> expression GT expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression GT expression .)
    RPAREN          reduce using rule 39 (expression -> expression GT expression .)
    LBRACE          reduce using rule 39 (expression -> expression GT expression .)
    COMMA           reduce using rule 39 (expression -> expression GT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! LEQ             [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! GEQ             [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression GT expression .) ]


state 64

    (40) expression -> expression LEQ expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression LEQ expression .)
    RPAREN          reduce using rule 40 (expression -> expression LEQ expression .)
    LBRACE          reduce using rule 40 (expression -> expression LEQ expression .)
    COMMA           reduce using rule 40 (expression -> expression LEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! LT              [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! GT              [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! LEQ             [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! GEQ             [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression LEQ expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression LEQ expression .) ]


state 65

    (41) expression -> expression GEQ expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 41 (expression -> expression GEQ expression .)
    RPAREN          reduce using rule 41 (expression -> expression GEQ expression .)
    LBRACE          reduce using rule 41 (expression -> expression GEQ expression .)
    COMMA           reduce using rule 41 (expression -> expression GEQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41

  ! PLUS            [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! LEQ             [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! GEQ             [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression GEQ expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression GEQ expression .) ]


state 66

    (42) expression -> expression AND expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> expression AND expression .)
    EQ              reduce using rule 42 (expression -> expression AND expression .)
    NEQ             reduce using rule 42 (expression -> expression AND expression .)
    LT              reduce using rule 42 (expression -> expression AND expression .)
    GT              reduce using rule 42 (expression -> expression AND expression .)
    LEQ             reduce using rule 42 (expression -> expression AND expression .)
    GEQ             reduce using rule 42 (expression -> expression AND expression .)
    AND             reduce using rule 42 (expression -> expression AND expression .)
    OR              reduce using rule 42 (expression -> expression AND expression .)
    RPAREN          reduce using rule 42 (expression -> expression AND expression .)
    LBRACE          reduce using rule 42 (expression -> expression AND expression .)
    COMMA           reduce using rule 42 (expression -> expression AND expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33

  ! PLUS            [ reduce using rule 42 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression AND expression .) ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 67

    (43) expression -> expression OR expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    SEMICOLON       reduce using rule 43 (expression -> expression OR expression .)
    EQ              reduce using rule 43 (expression -> expression OR expression .)
    NEQ             reduce using rule 43 (expression -> expression OR expression .)
    LT              reduce using rule 43 (expression -> expression OR expression .)
    GT              reduce using rule 43 (expression -> expression OR expression .)
    LEQ             reduce using rule 43 (expression -> expression OR expression .)
    GEQ             reduce using rule 43 (expression -> expression OR expression .)
    OR              reduce using rule 43 (expression -> expression OR expression .)
    RPAREN          reduce using rule 43 (expression -> expression OR expression .)
    LBRACE          reduce using rule 43 (expression -> expression OR expression .)
    COMMA           reduce using rule 43 (expression -> expression OR expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    AND             shift and go to state 40

  ! PLUS            [ reduce using rule 43 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression OR expression .) ]
  ! EQ              [ shift and go to state 34 ]
  ! NEQ             [ shift and go to state 35 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 41 ]


state 68

    (16) print_statement -> SAY LPAREN expression . RPAREN SEMICOLON
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 69

    (45) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 45 (expression -> LPAREN expression RPAREN .)


state 70

    (19) if_statement -> CHECK LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> CHECK LPAREN expression . RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 71

    (21) while_statement -> KEEP LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          shift and go to state 81
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 72

    (24) repeat_statement -> REPEAT expression LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement_list                 shift and go to state 82
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 73

    (22) function_declaration -> CREATE IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    (25) parameter_list -> . parameter_list COMMA IDENTIFIER
    (26) parameter_list -> . IDENTIFIER
    (27) parameter_list -> . empty
    (50) empty -> .

    IDENTIFIER      shift and go to state 83
    RPAREN          reduce using rule 50 (empty -> .)
    COMMA           reduce using rule 50 (empty -> .)

    parameter_list                 shift and go to state 84
    empty                          shift and go to state 85

state 74

    (23) return_statement -> GIVE expression SEMICOLON .

    IDENTIFIER      reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    SAY             reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    CHECK           reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    KEEP            reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    REPEAT          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    CREATE          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    GIVE            reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    NOT             reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    LPAREN          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    NUMBER          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    FLOAT           reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    STRING          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    $end            reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)
    RBRACE          reduce using rule 23 (return_statement -> GIVE expression SEMICOLON .)


state 75

    (13) assignment_statement -> IDENTIFIER IS expression SEMICOLON .

    IDENTIFIER      reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    SAY             reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    CHECK           reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    KEEP            reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    REPEAT          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    CREATE          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    GIVE            reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    NOT             reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    LPAREN          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    NUMBER          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    FLOAT           reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    STRING          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    $end            reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)
    RBRACE          reduce using rule 13 (assignment_statement -> IDENTIFIER IS expression SEMICOLON .)


state 76

    (17) input_statement -> IDENTIFIER IS ASK LPAREN . RPAREN SEMICOLON
    (18) input_statement -> IDENTIFIER IS ASK LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RPAREN          shift and go to state 86
    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 87

state 77

    (31) expression -> IDENTIFIER LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    EQ              reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    LT              reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    GT              reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    AND             reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    OR              reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    LBRACE          reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 31 (expression -> IDENTIFIER LPAREN argument_list RPAREN .)


state 78

    (28) argument_list -> argument_list COMMA . expression
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 44
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 88

state 79

    (16) print_statement -> SAY LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 89


state 80

    (19) if_statement -> CHECK LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (20) if_statement -> CHECK LPAREN expression RPAREN . LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE

    LBRACE          shift and go to state 90


state 81

    (21) while_statement -> KEEP LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 91


state 82

    (24) repeat_statement -> REPEAT expression LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RBRACE          shift and go to state 92
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 83

    (26) parameter_list -> IDENTIFIER .

    RPAREN          reduce using rule 26 (parameter_list -> IDENTIFIER .)
    COMMA           reduce using rule 26 (parameter_list -> IDENTIFIER .)


state 84

    (22) function_declaration -> CREATE IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    (25) parameter_list -> parameter_list . COMMA IDENTIFIER

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 94


state 85

    (27) parameter_list -> empty .

    RPAREN          reduce using rule 27 (parameter_list -> empty .)
    COMMA           reduce using rule 27 (parameter_list -> empty .)


state 86

    (17) input_statement -> IDENTIFIER IS ASK LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 95


state 87

    (18) input_statement -> IDENTIFIER IS ASK LPAREN expression . RPAREN SEMICOLON
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 88

    (28) argument_list -> argument_list COMMA expression .
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . TIMES expression
    (35) expression -> expression . DIVIDE expression
    (36) expression -> expression . EQ expression
    (37) expression -> expression . NEQ expression
    (38) expression -> expression . LT expression
    (39) expression -> expression . GT expression
    (40) expression -> expression . LEQ expression
    (41) expression -> expression . GEQ expression
    (42) expression -> expression . AND expression
    (43) expression -> expression . OR expression

    RPAREN          reduce using rule 28 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 28 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    EQ              shift and go to state 34
    NEQ             shift and go to state 35
    LT              shift and go to state 36
    GT              shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 89

    (16) print_statement -> SAY LPAREN expression RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    SAY             reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    CHECK           reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    KEEP            reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    REPEAT          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    CREATE          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    GIVE            reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 16 (print_statement -> SAY LPAREN expression RPAREN SEMICOLON .)


state 90

    (19) if_statement -> CHECK LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE . statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement_list                 shift and go to state 97
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 91

    (21) while_statement -> KEEP LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement_list                 shift and go to state 98
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 92

    (24) repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .

    IDENTIFIER      reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    SAY             reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    CHECK           reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    KEEP            reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    CREATE          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    GIVE            reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    NOT             reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    STRING          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 24 (repeat_statement -> REPEAT expression LBRACE statement_list RBRACE .)


state 93

    (22) function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 99


state 94

    (25) parameter_list -> parameter_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 100


state 95

    (17) input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    SAY             reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    CHECK           reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    KEEP            reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    REPEAT          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    CREATE          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    GIVE            reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    NOT             reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    NUMBER          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 17 (input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON .)


state 96

    (18) input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 101


state 97

    (19) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list . RBRACE OTHERWISE LBRACE statement_list RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RBRACE          shift and go to state 102
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 98

    (21) while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RBRACE          shift and go to state 103
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 99

    (22) function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    statement_list                 shift and go to state 104
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12
    expression                     shift and go to state 14

state 100

    (25) parameter_list -> parameter_list COMMA IDENTIFIER .

    RPAREN          reduce using rule 25 (parameter_list -> parameter_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 25 (parameter_list -> parameter_list COMMA IDENTIFIER .)


state 101

    (18) input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    SAY             reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    CHECK           reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    KEEP            reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    REPEAT          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    CREATE          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    GIVE            reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 18 (input_statement -> IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON .)


state 102

    (19) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .
    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE . OTHERWISE LBRACE statement_list RBRACE

    IDENTIFIER      reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SAY             reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CHECK           reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    KEEP            reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CREATE          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    GIVE            reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 19 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    OTHERWISE       shift and go to state 105


state 103

    (21) while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .

    IDENTIFIER      reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SAY             reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CHECK           reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    KEEP            reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CREATE          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    GIVE            reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 21 (while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 104

    (22) function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RBRACE          shift and go to state 106
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12
    expression                     shift and go to state 14

state 105

    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 107


state 106

    (22) function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    IDENTIFIER      reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    SAY             reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    CHECK           reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    KEEP            reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    CREATE          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    GIVE            reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    NOT             reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    STRING          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 22 (function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)


state 107

    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement_list                 shift and go to state 108
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 108

    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . if_statement
    (8) statement -> . while_statement
    (9) statement -> . repeat_statement
    (10) statement -> . function_declaration
    (11) statement -> . return_statement
    (12) statement -> . input_statement
    (13) assignment_statement -> . IDENTIFIER IS expression SEMICOLON
    (15) expression_statement -> . expression SEMICOLON
    (16) print_statement -> . SAY LPAREN expression RPAREN SEMICOLON
    (19) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE
    (20) if_statement -> . CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE
    (21) while_statement -> . KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE
    (24) repeat_statement -> . REPEAT expression LBRACE statement_list RBRACE
    (22) function_declaration -> . CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (23) return_statement -> . GIVE expression SEMICOLON
    (17) input_statement -> . IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON
    (18) input_statement -> . IDENTIFIER IS ASK LPAREN expression RPAREN SEMICOLON
    (31) expression -> . IDENTIFIER LPAREN argument_list RPAREN
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression TIMES expression
    (35) expression -> . expression DIVIDE expression
    (36) expression -> . expression EQ expression
    (37) expression -> . expression NEQ expression
    (38) expression -> . expression LT expression
    (39) expression -> . expression GT expression
    (40) expression -> . expression LEQ expression
    (41) expression -> . expression GEQ expression
    (42) expression -> . expression AND expression
    (43) expression -> . expression OR expression
    (44) expression -> . NOT expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . FLOAT
    (48) expression -> . STRING
    (49) expression -> . IDENTIFIER

    RBRACE          shift and go to state 109
    IDENTIFIER      shift and go to state 13
    SAY             shift and go to state 15
    CHECK           shift and go to state 17
    KEEP            shift and go to state 18
    REPEAT          shift and go to state 19
    CREATE          shift and go to state 20
    GIVE            shift and go to state 21
    NOT             shift and go to state 22
    LPAREN          shift and go to state 16
    NUMBER          shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25

    expression                     shift and go to state 14
    statement                      shift and go to state 26
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    print_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    repeat_statement               shift and go to state 9
    function_declaration           shift and go to state 10
    return_statement               shift and go to state 11
    input_statement                shift and go to state 12

state 109

    (20) if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .

    IDENTIFIER      reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    SAY             reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    CHECK           reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    KEEP            reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    CREATE          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    GIVE            reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    NOT             reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    STRING          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    $end            reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 20 (if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for EQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for GT in state 60 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for LT in state 61 resolved as shift
WARNING: shift/reduce conflict for GT in state 61 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for EQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for GT in state 63 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for EQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for EQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
