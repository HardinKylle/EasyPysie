Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMMA
    ELSE
    EQ
    FLOAT
    FOR
    FUNCTION
    GEQ
    GT
    IF
    INPUT
    LBRACE
    LEQ
    LT
    NEQ
    NOT
    OR
    RBRACE
    STRING
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> assignment_statement
Rule 5     statement -> expression_statement
Rule 6     assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 7     expression_statement -> expression SEMICOLON
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression TIMES expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> NUMBER
Rule 14    expression -> IDENTIFIER
Rule 15    statement -> PRINT LPAREN expression RPAREN SEMICOLON

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 6
COMMA                : 
DIVIDE               : 11
ELSE                 : 
EQ                   : 
FLOAT                : 
FOR                  : 
FUNCTION             : 
GEQ                  : 
GT                   : 
IDENTIFIER           : 6 14
IF                   : 
INPUT                : 
LBRACE               : 
LEQ                  : 
LPAREN               : 12 15
LT                   : 
MINUS                : 9
NEQ                  : 
NOT                  : 
NUMBER               : 13
OR                   : 
PLUS                 : 8
PRINT                : 15
RBRACE               : 
RPAREN               : 12 15
SEMICOLON            : 6 7 15
STRING               : 
TIMES                : 10
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment_statement : 4
expression           : 6 7 8 8 9 9 10 10 11 11 12 15
expression_statement : 5
program              : 0
statement            : 2 3
statement_list       : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (15) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (6) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (7) expression_statement -> . expression SEMICOLON
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    PRINT           shift and go to state 6
    IDENTIFIER      shift and go to state 9
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    expression                     shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) statement -> . expression_statement
    (15) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (6) assignment_statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (7) expression_statement -> . expression SEMICOLON
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 6
    IDENTIFIER      shift and go to state 9
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10

    statement                      shift and go to state 11
    assignment_statement           shift and go to state 4
    expression_statement           shift and go to state 5
    expression                     shift and go to state 8

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> assignment_statement .

    PRINT           reduce using rule 4 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 4 (statement -> assignment_statement .)
    LPAREN          reduce using rule 4 (statement -> assignment_statement .)
    NUMBER          reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) statement -> expression_statement .

    PRINT           reduce using rule 5 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 5 (statement -> expression_statement .)
    LPAREN          reduce using rule 5 (statement -> expression_statement .)
    NUMBER          reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)


state 6

    (15) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 12


state 7

    (12) expression -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 13

state 8

    (7) expression_statement -> expression . SEMICOLON
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 9

    (6) assignment_statement -> IDENTIFIER . ASSIGN expression SEMICOLON
    (14) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 20
    SEMICOLON       reduce using rule 14 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 14 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 14 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 14 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 14 (expression -> IDENTIFIER .)


state 10

    (13) expression -> NUMBER .

    SEMICOLON       reduce using rule 13 (expression -> NUMBER .)
    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    RPAREN          reduce using rule 13 (expression -> NUMBER .)


state 11

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 12

    (15) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 21

state 13

    (12) expression -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 22
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 14

    (14) expression -> IDENTIFIER .

    RPAREN          reduce using rule 14 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 14 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 14 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 14 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 14 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 14 (expression -> IDENTIFIER .)


state 15

    (7) expression_statement -> expression SEMICOLON .

    PRINT           reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 7 (expression_statement -> expression SEMICOLON .)


state 16

    (8) expression -> expression PLUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 23

state 17

    (9) expression -> expression MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 24

state 18

    (10) expression -> expression TIMES . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 25

state 19

    (11) expression -> expression DIVIDE . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 26

state 20

    (6) assignment_statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . IDENTIFIER

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 14

    expression                     shift and go to state 27

state 21

    (15) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 22

    (12) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 23

    (8) expression -> expression PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 8 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 8 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 8 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! TIMES           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]


state 24

    (9) expression -> expression MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 9 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 9 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 9 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! TIMES           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]


state 25

    (10) expression -> expression TIMES expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 10 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 10 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 10 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 10 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 10 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 10 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]


state 26

    (11) expression -> expression DIVIDE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 11 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 11 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 11 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 11 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 11 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 11 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 16 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]


state 27

    (6) assignment_statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 29
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 28

    (15) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 30


state 29

    (6) assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    PRINT           reduce using rule 6 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 6 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    NUMBER          reduce using rule 6 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 6 (assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 30

    (15) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    PRINT           reduce using rule 15 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 15 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 15 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 15 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 15 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)

