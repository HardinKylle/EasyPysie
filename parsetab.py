
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftPLUSMINUSleftTIMESDIVIDEAND ASK ASSIGN CHECK COMMA CREATE DIVIDE EQ FLOAT GEQ GIVE GT IDENTIFIER IS KEEP LBRACE LEQ LPAREN LT MINUS NEQ NOT NUMBER OR OTHERWISE PLUS RBRACE REPEAT RPAREN SAY SEMICOLON STRING TIMESprogram : statement_liststatement_list : statement_list statement\n| statementstatement : assignment_statement\n| expression_statement\n| print_statement\n| if_statement\n| while_statement\n| for_statement\n| function_declaration\n| return_statement\n| input_statementassignment_statement : IDENTIFIER IS expression SEMICOLONassignment_expression : IDENTIFIER ASSIGN expressionexpression_statement : expression SEMICOLONprint_statement : SAY LPAREN expression RPAREN SEMICOLONinput_statement : IDENTIFIER IS ASK LPAREN RPAREN SEMICOLONif_statement : CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE\n| CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACEwhile_statement : KEEP LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : REPEAT LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN LBRACE statement_list RBRACEfunction_declaration : CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACEreturn_statement : GIVE expression SEMICOLONparameter_list : parameter_list COMMA IDENTIFIER\n| IDENTIFIER\n| emptyargument_list : argument_list COMMA expression\n| expression\n| emptyexpression : IDENTIFIER LPAREN argument_list RPARENexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression EQ expression\n| expression NEQ expression\n| expression LT expression\n| expression GT expression\n| expression LEQ expression\n| expression GEQ expressionexpression : expression AND expression\n| expression OR expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : FLOATexpression : STRINGexpression : IDENTIFIERempty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,16,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,74,75,76,79,83,84,90,91,92,96,97,98,99,100,101,103,104,106,109,110,111,112,113,114,115,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,44,48,44,44,-2,44,44,-15,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,73,85,-23,-13,44,44,44,-16,13,13,102,-17,13,13,73,13,-18,-20,13,-22,13,13,13,13,-19,-21,]),'SAY':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,15,15,-17,15,15,15,-18,-20,15,-22,15,15,15,15,-19,-21,]),'CHECK':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,17,17,-17,17,17,17,-18,-20,17,-22,17,17,17,17,-19,-21,]),'KEEP':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,18,18,-17,18,18,18,-18,-20,18,-22,18,18,18,18,-19,-21,]),'REPEAT':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,19,19,-17,19,19,19,-18,-20,19,-22,19,19,19,19,-19,-21,]),'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,20,20,-17,20,20,20,-18,-20,20,-22,20,20,20,20,-19,-21,]),'GIVE':([0,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,21,21,-17,21,21,21,-18,-20,21,-22,21,21,21,21,-19,-21,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,16,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,75,76,79,83,84,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,22,22,22,-2,22,22,-15,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-23,-13,22,22,22,-16,22,22,-17,22,22,22,-18,-20,22,-22,22,22,22,22,-19,-21,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,52,75,76,79,83,84,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,28,42,16,45,46,47,16,16,-2,16,16,-15,16,16,16,16,16,16,16,16,16,16,16,16,16,28,16,16,74,77,-23,-13,16,16,16,-16,16,16,-17,16,16,16,-18,-20,16,-22,16,16,16,16,-19,-21,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,16,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,75,76,79,83,84,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,23,23,23,-2,23,23,-15,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-23,-13,23,23,23,-16,23,23,-17,23,23,23,-18,-20,23,-22,23,23,23,23,-19,-21,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,16,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,75,76,79,83,84,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,24,24,24,-2,24,24,-15,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-23,-13,24,24,24,-16,24,24,-17,24,24,24,-18,-20,24,-22,24,24,24,24,-19,-21,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,16,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,75,76,79,83,84,90,91,92,97,98,99,101,103,104,106,109,110,111,112,113,114,115,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,25,25,25,-2,25,25,-15,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-23,-13,25,25,25,-16,25,25,-17,25,25,25,-18,-20,25,-22,25,25,25,25,-19,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,97,103,104,109,114,115,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,-17,-18,-20,-22,-19,-21,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,26,29,75,76,90,97,98,99,103,104,106,109,112,113,114,115,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-15,-23,-13,-16,-17,103,104,-18,-20,109,-22,114,115,-19,-21,]),'IS':([13,],[27,]),'SEMICOLON':([13,14,23,24,25,44,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,69,72,78,80,88,93,94,],[-48,29,-45,-46,-47,-48,75,-43,76,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,83,-30,90,97,100,-14,]),'PLUS':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,30,-45,-46,-47,30,-48,30,30,30,30,-31,-32,-33,-34,30,30,30,30,30,30,30,30,30,-44,30,30,-30,30,30,30,]),'MINUS':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,31,-45,-46,-47,31,-48,31,31,31,31,-31,-32,-33,-34,31,31,31,31,31,31,31,31,31,-44,31,31,-30,31,31,31,]),'TIMES':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,32,-45,-46,-47,32,-48,32,32,32,32,32,32,-33,-34,32,32,32,32,32,32,32,32,32,-44,32,32,-30,32,32,32,]),'DIVIDE':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,33,-45,-46,-47,33,-48,33,33,33,33,33,33,-33,-34,33,33,33,33,33,33,33,33,33,-44,33,33,-30,33,33,33,]),'EQ':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,34,-45,-46,-47,34,-48,34,-43,34,34,-31,-32,-33,-34,34,34,34,34,34,34,-41,-42,34,-44,34,34,-30,34,34,34,]),'NEQ':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,35,-45,-46,-47,35,-48,35,-43,35,35,-31,-32,-33,-34,35,35,35,35,35,35,-41,-42,35,-44,35,35,-30,35,35,35,]),'LT':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,36,-45,-46,-47,36,-48,36,-43,36,36,-31,-32,-33,-34,36,36,36,36,36,36,-41,-42,36,-44,36,36,-30,36,36,36,]),'GT':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,37,-45,-46,-47,37,-48,37,-43,37,37,-31,-32,-33,-34,37,37,37,37,37,37,-41,-42,37,-44,37,37,-30,37,37,37,]),'LEQ':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,38,-45,-46,-47,38,-48,38,-43,38,38,-31,-32,-33,-34,38,38,38,38,38,38,-41,-42,38,-44,38,38,-30,38,38,38,]),'GEQ':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,39,-45,-46,-47,39,-48,39,-43,39,39,-31,-32,-33,-34,39,39,39,39,39,39,-41,-42,39,-44,39,39,-30,39,39,39,]),'AND':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,40,-45,-46,-47,40,-48,40,-43,40,40,-31,-32,-33,-34,40,40,40,40,40,40,-41,40,40,-44,40,40,-30,40,40,40,]),'OR':([13,14,23,24,25,43,44,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,78,89,93,94,],[-48,41,-45,-46,-47,41,-48,41,-43,41,41,-31,-32,-33,-34,41,41,41,41,41,41,-41,-42,41,-44,41,41,-30,41,41,41,]),'RPAREN':([23,24,25,28,43,44,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,85,86,87,89,94,102,105,],[-45,-46,-47,-49,69,-48,-43,78,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,80,-44,81,82,-49,88,-30,-25,95,-26,-27,-14,-24,108,]),'COMMA':([23,24,25,28,44,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,74,78,85,86,87,89,102,],[-45,-46,-47,-49,-48,-43,79,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-49,-30,-25,96,-26,-27,-24,]),'ASK':([27,],[52,]),'ASSIGN':([73,],[84,]),'LBRACE':([81,82,95,107,108,],[91,92,101,110,111,]),'OTHERWISE':([103,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,91,92,101,110,111,],[2,98,99,106,112,113,]),'statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[3,26,3,3,26,26,3,26,3,3,26,26,]),'assignment_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'expression_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'print_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'if_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'while_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'for_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'function_declaration':([0,2,91,92,98,99,101,106,110,111,112,113,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'return_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'input_statement':([0,2,91,92,98,99,101,106,110,111,112,113,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'expression':([0,2,16,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,79,83,84,91,92,98,99,101,106,110,111,112,113,],[14,14,43,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,89,93,94,14,14,14,14,14,14,14,14,14,14,]),'argument_list':([28,],[53,]),'empty':([28,74,],[55,87,]),'assignment_expression':([47,100,],[72,105,]),'parameter_list':([74,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',22),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',23),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',30),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',31),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',36),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',38),
  ('assignment_statement -> IDENTIFIER IS expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser.py',42),
  ('assignment_expression -> IDENTIFIER ASSIGN expression','assignment_expression',3,'p_assignment_expression','parser.py',47),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',51),
  ('print_statement -> SAY LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser.py',55),
  ('input_statement -> IDENTIFIER IS ASK LPAREN RPAREN SEMICOLON','input_statement',6,'p_input_statement','parser.py',59),
  ('if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_if_statement','parser.py',63),
  ('if_statement -> CHECK LPAREN expression RPAREN LBRACE statement_list RBRACE OTHERWISE LBRACE statement_list RBRACE','if_statement',11,'p_if_statement','parser.py',64),
  ('while_statement -> KEEP LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','parser.py',71),
  ('for_statement -> REPEAT LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN LBRACE statement_list RBRACE','for_statement',11,'p_for_statement','parser.py',75),
  ('function_declaration -> CREATE IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE','function_declaration',8,'p_function_declaration','parser.py',79),
  ('return_statement -> GIVE expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',83),
  ('parameter_list -> parameter_list COMMA IDENTIFIER','parameter_list',3,'p_parameter_list','parser.py',87),
  ('parameter_list -> IDENTIFIER','parameter_list',1,'p_parameter_list','parser.py',88),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',89),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',99),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',100),
  ('argument_list -> empty','argument_list',1,'p_argument_list','parser.py',101),
  ('expression -> IDENTIFIER LPAREN argument_list RPAREN','expression',4,'p_expression_function_call','parser.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',115),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',116),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',117),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',118),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',119),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser.py',120),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',121),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',122),
  ('expression -> expression LEQ expression','expression',3,'p_expression_binop','parser.py',123),
  ('expression -> expression GEQ expression','expression',3,'p_expression_binop','parser.py',124),
  ('expression -> expression AND expression','expression',3,'p_expression_logic','parser.py',128),
  ('expression -> expression OR expression','expression',3,'p_expression_logic','parser.py',129),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',133),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',141),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',145),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',149),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',153),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',163),
]
